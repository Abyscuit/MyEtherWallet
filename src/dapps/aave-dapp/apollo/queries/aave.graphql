subscription liquidityRateHistoryUpdate($reserveAddress: String!) {
  reserveParamsHistoryItems(
    where: { reserve: $reserveAddress }
    first: 10
  ) {
    variableBorrowRate
    stableBorrowRate
    liquidityRate
    timestamp
  }
}

subscription reserveUpdateSubscription($poolId: String!) {
  reserves(where: { pool: $poolId }) {
    ...ReserveData
    __typename
  }
}


subscription userPositionUpdateSubscription(
  $userAddress: String!
  $poolId: String!
) {
  userReserves(where: { user: $userAddress, pool: $poolId }) {
    ...UserReserveData
    __typename
  }
}

subscription usdPriceEth {
  priceOracle(id: "1") {
    usdPriceEth
  }
}

fragment ReserveRatesHistoryData on ReserveParamsHistoryItem {
  variableBorrowRate
  stableBorrowRate
  liquidityRate
  utilizationRate
  timestamp
  __typename
}

fragment UserReserveData on UserReserve {
  reserve {
    id
    underlyingAsset
    name
    symbol
    decimals
    liquidityRate
    reserveLiquidationBonus
    lastUpdateTimestamp
    aToken {
      id
    }
  }
  usageAsCollateralEnabledOnUser
  variableBorrowIndex
  lastUpdateTimestamp
  __typename
}

fragment ReserveData on Reserve {
  id
  underlyingAsset
  name
  symbol
  decimals
  isActive
  usageAsCollateralEnabled
  borrowingEnabled
  stableBorrowRateEnabled
  baseLTVasCollateral
  optimalUtilisationRate
  stableRateSlope1
  stableRateSlope2
  baseVariableBorrowRate
  variableRateSlope1
  variableRateSlope2
  liquidityIndex
  reserveLiquidationThreshold
  variableBorrowIndex
  aToken {
    id
  }
 
  price {
    priceInEth
  }
}
